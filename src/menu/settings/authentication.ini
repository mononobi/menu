[active]

selected: development

[development]

# default authenticator to be used on authenticated routes which
# do not have any authenticator set for them in @api decorator and
# their url does not match any of the rule based authenticators.
default_authenticator: null

# a dict containing different url rules and their corresponding authenticator name.
# on each authenticated request, a relevant authenticator from this dict will be
# used to authenticate the user if the relevant @api decorator does not already set
# an authenticator. if no authenticator matches a given url rule, the default
# authenticator will be used.
# for example:
# {"/api/customers": "customer",
#  "/api/sellers": "seller",
#  "/api": "api"}
# NOTE:
# in the above configuration example, if a request has the url of "/api/customers/34" then
# the "customer" authenticator will be used for it. but if another request has the url
# of "api/goods" then the "api" authenticator will be used for it.
rule_based_authenticators: {}

[production]

# default authenticator to be used on authenticated routes which
# do not have any authenticator set for them in @api decorator and
# their url does not match any of the rule based authenticators.
default_authenticator: null

# a dict containing different url rules and their corresponding authenticator name.
# on each authenticated request, a relevant authenticator from this dict will be
# used to authenticate the user if the relevant @api decorator does not already set
# an authenticator. if no authenticator matches a given url rule, the default
# authenticator will be used.
# for example:
# {"/api/customers": "customer",
#  "/api/sellers": "seller",
#  "/api": "api"}
# NOTE:
# in the above configuration example, if a request has the url of "/api/customers/34" then
# the "customer" authenticator will be used for it. but if another request has the url
# of "api/goods" then the "api" authenticator will be used for it.
rule_based_authenticators: {}

[test]

# default authenticator to be used on authenticated routes which
# do not have any authenticator set for them in @api decorator and
# their url does not match any of the rule based authenticators.
default_authenticator: null

# a dict containing different url rules and their corresponding authenticator name.
# on each authenticated request, a relevant authenticator from this dict will be
# used to authenticate the user if the relevant @api decorator does not already set
# an authenticator. if no authenticator matches a given url rule, the default
# authenticator will be used.
# for example:
# {"/api/customers": "customer",
#  "/api/sellers": "seller",
#  "/api": "api"}
# NOTE:
# in the above configuration example, if a request has the url of "/api/customers/34" then
# the "customer" authenticator will be used for it. but if another request has the url
# of "api/goods" then the "api" authenticator will be used for it.
rule_based_authenticators: {}